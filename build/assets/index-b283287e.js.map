{"version":3,"file":"index-b283287e.js","sources":["../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/node/id.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/utils/wildcards.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/debug/record.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/.pnpm/framer-motion@10.11.2_biqbaboplfbrettd7655fr4n2y/node_modules/framer-motion/dist/es/render/dom/motion.mjs","../../src/shared/ui/typed_text/ui.tsx","../../src/pages/landing/page.tsx"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const safeCancel = () => {\n        sync.update(() => animation.cancel());\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","function fillWildcardKeyframes(origin, [...keyframes]) {\n    /**\n     * Ensure an wildcard keyframes are hydrated by the origin.\n     */\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? origin : keyframes[i - 1];\n        }\n    }\n    return keyframes;\n}\n\nexport { fillWildcardKeyframes };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\nimport { fillWildcardKeyframes } from './wildcards.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        return fillWildcardKeyframes(origin, target);\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                /**\n                 * If the parent target isn't up-to-date, force it to update.\n                 * This is an unfortunate de-optimisation as it means any updating relative\n                 * projection will cause all the relative parents to recalculate back\n                 * up the tree.\n                 */\n                if (this.relativeParent.resolvedRelativeTargetAt !==\n                    frameData.timestamp) {\n                    this.relativeParent.resolveTargetDelta(true);\n                }\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    // keyframes: [0, animationTarget],÷\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.11.2\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.11.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { useEffect, useState } from 'react'\n\ninterface TypedTextProps {\n\ttext: string\n\tdelay?: number\n\tdelayBeforeStart?: number\n\tisRepeatable?: boolean\n}\n\nexport function TypedText(props: TypedTextProps) {\n\tconst { text, delay = 100, delayBeforeStart = 1, isRepeatable = false } = props\n\n\tconst [typedText, setTypedText] = useState<string>('')\n\tconst [isStart, setIsStart] = useState<boolean>(false)\n\n\tuseEffect(() => {\n\t\tsetTimeout(() => {\n\t\t\tsetIsStart(true)\n\t\t}, delayBeforeStart)\n\n\t\tif (isStart) {\n\t\t\tsetInterval(() => {\n\t\t\t\tsetTypedText((prev) => {\n\t\t\t\t\tif (prev.length < text.length) {\n\t\t\t\t\t\treturn text.slice(0, prev.length + 1)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (isRepeatable) {\n\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn prev\n\t\t\t\t})\n\t\t\t}, delay)\n\t\t}\n\n\t\t// return () => clearInterval(intervalId)\n\t}, [isStart, text, delay, delayBeforeStart])\n\n\treturn <>{typedText}</>\n}\n","import { Layout, Typography } from 'antd'\nimport cn from 'classnames'\nimport { motion } from 'framer-motion'\n\nimport { Header } from '~src/widgets/header'\n\nimport { TypedText } from '~src/shared/ui'\n\nimport styles from './styles.module.scss'\n\nconst TYPE_DELAY = 9.9\nconst TITLE = 'Добро пожаловать в SELF MENT'\nconst TEXT =\n\t'Мы стремимся предоставлять нашим пользователям лучший опыт обучения, и поэтому мы применяем методику обучения, разработанную Фейнманом, которая доказала свою эффективность. Наша команда специалистов помогает нашим пользователям максимально эффективно учиться и успешно достигать своих учебных целей.'\nconst TEXT_DELAY_BEFORE_START = TITLE.length * TYPE_DELAY\nconst QUOTE_DELAY_BEFORE_START = TEXT_DELAY_BEFORE_START + TEXT.length * TYPE_DELAY\nconst QUOTE = `Я не учу своих студентов. Я создаю условия, в которых они учатся.\"\n\"Учиться - это не запоминать, это понимать. Не важно, сколько вы знаете, важно, сколько вы понимаете.\"`\nconst QUOTE_AUTHOR_DELAY_BEFORE_START = QUOTE_DELAY_BEFORE_START + QUOTE.length * TYPE_DELAY\nconst QUOTE_AUTHOR = 'Ричард Фейнман'\n\nexport function LandingPage() {\n\treturn (\n\t\t<Layout className={styles.root}>\n\t\t\t<Header />\n\t\t\t<Layout.Content className='container'>\n\t\t\t\t<section className={styles.hero_section}>\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tinitial={{ transform: 'translateY(-20px)', opacity: 0 }}\n\t\t\t\t\t\tanimate={{ transform: 'translateY(0)', opacity: 1 }}\n\t\t\t\t\t\ttransition={{ delay: 0.45, duration: 0.5 }}\n\t\t\t\t\t\tclassName={styles.hero}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tclassName={styles.hero_content}\n\t\t\t\t\t\tinitial={{ opacity: 0 }}\n\t\t\t\t\t\tanimate={{ opacity: 1 }}\n\t\t\t\t\t\ttransition={{\n\t\t\t\t\t\t\tdelay: 0.3,\n\t\t\t\t\t\t\tduration: 0.5,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography.Title className={cn(styles.hero_title)}>\n\t\t\t\t\t\t\t<TypedText text={TITLE} delay={TYPE_DELAY} />\n\t\t\t\t\t\t</Typography.Title>\n\t\t\t\t\t\t<Typography.Paragraph className={cn(styles.hero_text)}>\n\t\t\t\t\t\t\t<TypedText text={TEXT} delayBeforeStart={TEXT_DELAY_BEFORE_START} delay={TYPE_DELAY} />\n\t\t\t\t\t\t</Typography.Paragraph>\n\t\t\t\t\t\t<div className={styles.hero_quote}>\n\t\t\t\t\t\t\t<Typography.Text className={cn(styles.quote_text)}>\n\t\t\t\t\t\t\t\t<TypedText text={QUOTE} delayBeforeStart={QUOTE_DELAY_BEFORE_START} delay={TYPE_DELAY} />\n\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t\t<Typography.Text className={cn(styles.quote_author)}>\n\t\t\t\t\t\t\t\t<TypedText text={QUOTE_AUTHOR} delayBeforeStart={QUOTE_AUTHOR_DELAY_BEFORE_START} delay={TYPE_DELAY} />\n\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</motion.div>\n\t\t\t\t</section>\n\t\t\t</Layout.Content>\n\t\t</Layout>\n\t)\n}\n"],"names":["MotionConfigContext","createContext","p","MotionContext","PresenceContext","LazyContext","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","visualElement","useInsertionEffect","useIsomorphicLayoutEffect","useEffect","isRefObject","ref","useMotionRef","externalRef","useCallback","instance","isVariantLabel","v","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","name","isVariantNode","getCurrentTreeVariants","context","initial","animate","useCreateMotionContext","useMemo","variantLabelsAsDependency","prop","featureProps","featureDefinitions","key","loadFeatures","features","globalProjectionState","id","useProjectionId","useConstant","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","createMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","isStatic","projectionId","isBrowser","initialLayoutGroupConfig","isStrict","React.createElement","ForwardRefComponent","forwardRef","layoutId","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","componentCache","_target","lowercaseSVGElements","isSVGComponent","scaleCorrectors","addScaleCorrector","correctors","transformPropOrder","transformProps","isForcedMotionValue","layout","isMotionValue","value","translateAlias","numTransforms","buildTransform","transform","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformTemplate","transformString","i","transformName","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","int","number","numberValueTypes","px","degrees","scale","alpha","progressPercentage","buildHTMLStyles","state","latestValues","options","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","target","source","useInitialMotionValues","useStyle","styleProp","useHTMLProps","htmlProps","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","size","calcSVGTransformOrigin","dimensions","pxOriginX","pxOriginY","dashKeys","camelKeys","buildSVGPath","attrs","length","spacing","useDashCase","keys","pathLength","pathSpacing","buildSVGAttrs","attrX","attrY","pathOffset","latest","isSVGTag","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","renderHTML","element","projection","camelCaseAttributes","renderSVG","renderState","_styleProp","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","targetKey","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeState","createRenderState","onMount","makeLatestValues","makeUseVisualState","config","make","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","index","svgMotionConfig","htmlMotionConfig","createDomMotionConfig","addDomEvent","eventName","handler","isPrimaryPointer","event","extractEventInfo","pointType","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","handleEvent","info","sync","HoverGesture","pipe","FocusGesture","isFocusVisible","isNodeOrChild","child","fireSyntheticPointerEvent","syntheticPointerEvent","PressGesture","noop","startEvent","startInfo","removePointerUpListener","endEvent","endInfo","onTap","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","handleKeydown","keydownEvent","handleKeyup","keyupEvent","removeKeydownListener","handleBlur","removeBlurListener","onTapStart","whileTap","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","initIntersectionObserver","root","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","thresholdNames","InViewFeature","viewport","rootMargin","amount","once","onIntersectionUpdate","isIntersecting","onViewportEnter","onViewportLeave","hasViewportOptionChanged","prevViewport","gestureAnimations","shallowCompare","next","prev","prevLength","getCurrent","current","getVelocity","velocity","resolveVariant","optimizedAppearDataId","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","cubicBezierAsString","a","b","c","d","mapEasingToNativeEasing","animateStyle","valueName","keyframes","delay","duration","repeat","repeatType","ease","times","keyframeOptions","featureTests","results","supports","getFinalKeyframe","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","x","lowerBound","upperBound","mX1","mX2","currentX","currentT","cubicBezier","mY1","mY2","getTForX","aX","t","easeIn","easeOut","easeInOut","isEasingArray","mirrorEasing","reverseEasing","circIn","circOut","circInOut","backOut","backIn","backInOut","anticipate","easingLookup","easingDefinitionToFunction","invariant","x1","y1","x2","y2","convertOffsetToTimes","o","defaultEasing","keyframeValues","easingFunctions","absoluteTimes","defaultOffset","mapTimeToKeyframe","interpolate","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","warning","dampingRatio","clamp","undampedFreq","exponentialDecay","delta","calcAngularFreq","e","f","g","initialGuess","approximateRoot","stiffness","rootIterations","result","durationKeys","physicsKeys","isSpringType","getSpringOptions","springOptions","derived","spring","restDelta","restSpeed","damping","isResolvedFromDuration","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","dampedAngularFreq","freqForT","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","min","max","isOutOfBounds","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","timestamp","cancelSync","frameData","maxGeneratorDuration","calcGeneratorDuration","generator","timeStep","types","animateValue","autoplay","driver","keyframes$1","repeatDelay","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","resolveFinishedPromise","currentFinishedPromise","updateFinishedPromise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","calculatedDuration","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","progress","currentIteration","iterationProgress","iterationIsOdd","done","isAnimationFinished","finish","stopAnimationDriver","cancel","play","now","controls","reject","newTime","newSpeed","acceleratedValues","sampleDelta","requiresPregeneratedKeyframes","createAcceleratedAnimation","sampleAnimation","pregeneratedKeyframes","animation","safeCancel","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","complex","maxDefaults","applyDefaultFilter","floatRegex","unit","defaultValue","functionRegex","filter","functions","defaultValueTypes","color","getDefaultValueType","getAnimatableNone","defaultValueType","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","from","isZero","getZeroUnit","potentialUnitType","getValueTransition","fillWildcardKeyframes","getKeyframes","isTargetAnimatable","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","isZeroValueString","testValueType","auto","dimensionValueTypes","percent","vw","vh","findDimensionValueType","valueTypes","findValueType","setMotionValue","motionValue","setTarget","checkTargetForNewValues","_a","_b","newValueKeys","numNewValues","targetValue","getOriginFromTransition","getOrigin","transitionOrigin","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","appearId","animateVariant","variant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateVisualElement","resolvedDefinition","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","acc","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","shouldAnimate","setActive","createTypeState","AnimationFeature","prevAnimate","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","distance","distance2D","xDelta","yDelta","PanSession","handlers","transformPagePoint","getPanInfo","isPanStarted","isDistancePastThreshold","point","onStart","onMove","transformPoint","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","subtractPoint","history","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","mix","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","applyConstraints","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","top","left","bottom","right","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","sourceLength","targetLength","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","createAxisDelta","createDelta","createAxis","createBox","eachAxis","convertBoundingBoxToBox","convertBoxToBoundingBox","y","transformBoxPoints","topLeft","bottomRight","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","is2DTranslate","scalePoint","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","box","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","transformBox","snapToDefault","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","measureViewportBox","measurePageBox","rootProjectionNode","viewportBox","scroll","elementDragControls","VisualElementDragControls","originEvent","snapToCursor","dragPropagation","onDragStart","measuredAxis","animationState","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","isDragging","onDragEnd","_point","shouldDrag","axisValue","dragConstraints","prevConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","dragKey","externalMotionValue","boxProgress","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","direction","currentDirection","lockThreshold","DragGesture","dragControls","asyncHandler","PanGesture","pointerDownEvent","onPanSessionStart","onPanStart","onPan","onPanEnd","usePresence","useId","pixelsToPercent","pixels","correctBorderRadius","cssVariableRegex","parseCSSVariable","match","fallback","getVariableValue","depth","resolveCSSVariables","varToken","correctBoxShadow","projectionDelta","original","containsCSSVariables","cssVariables","shadow","template","xScale","yScale","averageScale","output","cssVariable","MeasureLayoutWithContext","React__default","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","layoutDependency","stack","promoteContext","safeToRemove","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisDelta","sourceAxis","removeAxisTransforms","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","removeItem","prevLead","indexOfNode","member","preserveFollowOpacity","crossfade","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","rotate","rotateX","rotateY","elementScaleX","elementScaleY","compareByDepth","FlatTree","timeout","start","checkElapsed","record","data","isSVGElement","animateSingleValue","motionValue$1","transformAxes","animationTarget","projectionFrameData","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","SubscriptionManager","args","subscriptionManager","isLayoutDirty","cancelDelay","resizeUnblockUpdate","finishAnimation","hasRelativeTargetChanged","newLayout","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","hasOnlyRelativeTargetChanged","animationOptions","resetRotation","shouldNotifyListeners","clearMeasurements","mountNodeEarly","resetTransformStyle","updateLayout","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","prevLayout","phase","needsMeasurement","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","roundBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","nodeBox","forceRecalculation","isShared","relativeParent","canSkip","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","notifyAll","snapshot","snapshotLatestValues","mixedValues","targetDelta","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","prevRelativeTarget","mixAxisDelta","mixBox","targetWithTransforms","shouldAnimatePositionOnly","xLength","yLength","needsReset","hasRotate","resetValues","styles","emptyStyles","valuesToRender","correct","applyTo","corrected","num","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","mixAxis","to","searchNode","roundAxis","DocumentProjectionNode","notify","HTMLProjectionNode","documentNode","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","targetBbox","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","scrollY","convertedTarget","unitConversion","parseDomVariant","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","motionMediaQuery","setReducedMotionPreferences","updateMotionValuesFromProps","nextValue","prevValue","existingValue","latestValue","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","initialMotionValues","_props","_prevProps","remove","valueIsTransform","removeOnChange","removeOnRenderRequest","other","renderedProps","ProjectionNodeConstructor","isEnabled","FeatureConstructor","ProjectionNode","MeasureLayoutComponent","layoutScroll","layoutRoot","feature","canMutate","listener","startAtParent","closestVariantNode","unsubscribe","valueFromInitial","DOMVisualElement","transformValues","isMounted","parsed","getComputedStyle","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","createDomVisualElement","motion","TypedText","text","delayBeforeStart","isRepeatable","typedText","setTypedText","useState","isStart","setIsStart","TYPE_DELAY","TITLE","TEXT","TEXT_DELAY_BEFORE_START","QUOTE_DELAY_BEFORE_START","QUOTE","QUOTE_AUTHOR_DELAY_BEFORE_START","QUOTE_AUTHOR","LandingPage","jsxs","Layout","jsx","Header","Typography","cn"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172]}