{"version":3,"file":"index-b4d77ab3.js","sources":["../../src/features/sign_in_form/model.ts","../../src/features/sign_in_form/ui.tsx","../../src/features/sign_in_form/index.ts","../../src/pages/sign_in/model.ts","../../src/pages/sign_in/page.tsx"],"sourcesContent":["import { createEvent, createStore, sample } from 'effector'\n\nimport { $$session } from '~src/entities/session'\n\nexport interface SignInForm {\n\temail: string\n\tpassword: string\n}\n\nexport function createSignInForm() {\n\tconst submit = createEvent<SignInForm>()\n\tconst setErrors = createEvent<SignInForm>()\n\n\tconst $errors = createStore<SignInForm>({} as SignInForm)\n\tconst $signInPending = $$session.signInFx.pending\n\n\t$errors.on(setErrors, (_, errors) => errors)\n\n\tsample({\n\t\tclock: submit,\n\t\tfilter: (form) => form?.email !== '' && form?.password !== '',\n\t\ttarget: $$session.signedIn,\n\t})\n\n\treturn { submit, setErrors, $errors, $signInPending }\n}\n","import { Button, Form, Input } from 'antd'\nimport cn from 'classnames'\nimport { z } from 'zod'\n\nimport styles from './styles.module.scss'\nimport { type createSignInForm, type SignInForm } from './model'\nimport { useUnit } from 'effector-react'\nimport { LockOutlined, UserOutlined } from '@ant-design/icons'\n\ninterface SignInFormProps {\n\tclassName?: string\n\tmodel: ReturnType<typeof createSignInForm>\n}\n\nconst schema = z\n\t.object({\n\t\temail: z.string({ required_error: 'Введите почту' }).email({ message: 'Введите корректную почту' }),\n\t\tpassword: z\n\t\t\t.string({ required_error: 'Введите пароль' })\n\t\t\t.min(6, { message: 'Пароль должен быть не менее 6 символов' }),\n\t})\n\t\n\nexport function SignInForm(props: SignInFormProps) {\n\tconst { className, model } = props\n\n\tconst [form] = Form.useForm()\n\tconst [errors, setErrors] = useUnit([model.$errors, model.setErrors])\n\tconst signInPending = useUnit(model.$signInPending)\n\tconst handleFinish = useUnit(model.submit)\n\n\tconst onFinish = async (values: SignInForm) => {\n\t\ttry {\n\t\t\tawait schema.parse(values)\n\t\t\thandleFinish(values)\n\t\t} catch (err: any) {\n\t\t\tsetErrors(err.formErrors.fieldErrors)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Form className={cn(styles.form, className)} size='large' form={form} onFinish={onFinish}>\n\t\t\t<Form.Item name='email' validateStatus={errors?.email ? 'error' : ''} help={errors.email}>\n\t\t\t\t<Input  prefix={<UserOutlined />} />\n\t\t\t</Form.Item>\n\t\t\t<Form.Item name='password' validateStatus={errors?.password ? 'error' : ''} help={errors.password}>\n\t\t\t\t<Input.Password prefix={<LockOutlined />} />\n\t\t\t</Form.Item>\n\t\t\t<Form.Item className={cn(styles.submit)}>\n\t\t\t\t<Button htmlType='submit'  type='primary' loading={signInPending}>\n\t\t\t\t\tВойти\n\t\t\t\t</Button>\n\t\t\t</Form.Item>\n\t\t</Form>\n\t)\n}\n","import { createSignInForm } from './model'\nimport { SignInForm } from './ui'\n\nexport const SignInFactory = {\n\tForm: SignInForm,\n\tcreate: createSignInForm,\n}\n","import { SignInFactory } from '~src/features/sign_in_form'\n\nexport const $$signInForm = SignInFactory.create()\n","import { Layout, Typography } from 'antd'\nimport cn from 'classnames'\nimport { useUnit } from 'effector-react'\nimport { Navigate, NavLink } from 'react-router-dom'\n\nimport { SignInFactory } from '~src/features/sign_in_form'\n\nimport { $$session } from '~src/entities/session'\n\nimport { Logo } from '~src/shared/assets'\n\nimport * as model from './model'\nimport { routes } from '../routes'\nimport styles from './styles.module.scss'\n\nexport function SignInPage() {\n\tconst isAuth = useUnit($$session.$isAuth)\n\n\tif (isAuth) return <Navigate to={routes.home()} />\n\treturn (\n\t\t<Layout className={styles.root}>\n\t\t\t<Layout.Content className='container'>\n\t\t\t\t<div className={styles.section}>\n\t\t\t\t\t<NavLink className={cn(styles.logo_link)} to={routes.landing()}>\n\t\t\t\t\t\t<img src={Logo} alt='logo' />\n\t\t\t\t\t\t<Typography.Text>Self Ment</Typography.Text>\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<Typography.Title level={2}>Вход</Typography.Title>\n\t\t\t\t\t<div className={styles.form}>\n\t\t\t\t\t\t<SignInFactory.Form model={model.$$signInForm} />\n\n\t\t\t\t\t\t<div className={styles.form_bottom}>\n\t\t\t\t\t\t\t<NavLink to={routes.signUp()}>\n\t\t\t\t\t\t\t\t<Typography.Link>Регистрация</Typography.Link>\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t{/* <NavLink> */}\n\t\t\t\t\t\t\t<Typography.Link>Забыли пароль?</Typography.Link>\n\t\t\t\t\t\t\t{/* </NavLink> */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Layout.Content>\n\t\t</Layout>\n\t)\n}\n"],"names":["createSignInForm","submit","createEvent","setErrors","$errors","createStore","$signInPending","$$session.signInFx","_","errors","sample","form","$$session.signedIn","schema","z","SignInForm","props","className","model","Form","useUnit","signInPending","handleFinish","onFinish","values","err","jsxs","cn","styles","jsx","Input","UserOutlined","LockOutlined","Button","SignInFactory","$$signInForm","SignInPage","$$session.$isAuth","Navigate","routes","Layout","NavLink","Logo","Typography","model.$$signInForm"],"mappings":"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"}